


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       **********************/
    2 00000000         ; * @file     startup_XMC1300.s
    3 00000000         ; * @brief    CMSIS Cortex-M4 Core Device Startup File f
                       or
    4 00000000         ; *           Infineon XMC1300 Device Series
    5 00000000         ; * @version  V1.00
    6 00000000         ; * @date     21. Jan. 2013
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2013 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         
   26 00000000         ;*  <<< Use Configuration Wizard in Context Menu >>>
   27 00000000         
   28 00000000         ; Amount of memory (in bytes) allocated for Stack
   29 00000000         ; Tailor this value to your application needs
   30 00000000         ; <h> Stack Configuration
   31 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   32 00000000         ; </h>
   33 00000000         
   34 00000000 00000400 
                       Stack_Size
                               EQU              0x00000400
   35 00000000         
   36 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   37 00000000         Stack_Mem
                               SPACE            Stack_Size
   38 00000400         __initial_sp
   39 00000400         
   40 00000400         
   41 00000400         ; <h> Heap Configuration
   42 00000400         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   43 00000400         ; </h>
   44 00000400         



ARM Macro Assembler    Page 2 


   45 00000400 00000000 
                       Heap_Size
                               EQU              0x00000000
   46 00000400         
   47 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   48 00000000         __heap_base
   49 00000000         Heap_Mem
                               SPACE            Heap_Size
   50 00000000         __heap_limit
   51 00000000         
   52 00000000         ; <h> Clock system handling by SSW
   53 00000000         ;   <h> CLK_VAL1 Configuration
   54 00000000         ;     <o0.0..7>    FDIV Fractional Divider Selection
   55 00000000         ;     <o0.8..15>   IDIV Divider Selection
   56 00000000         ;                     <0=> Divider is bypassed
   57 00000000         ;                     <1=> MCLK = 32 MHz
   58 00000000         ;                     <2=> MCLK = 16 MHz
   59 00000000         ;                     <3=> MCLK = 10.67 MHz
   60 00000000         ;                     <4=> MCLK = 8 MHz
   61 00000000         ;                     <254=> MCLK = 126 kHz
   62 00000000         ;                     <255=> MCLK = 125.5 kHz
   63 00000000         ;     <o0.16>      PCLKSEL PCLK Clock Select
   64 00000000         ;                     <0=> PCLK = MCLK
   65 00000000         ;                     <1=> PCLK = 2 x MCLK
   66 00000000         ;     <o0.17..19>  RTCCLKSEL RTC Clock Select
   67 00000000         ;                     <0=> 32.768kHz standby clock
   68 00000000         ;                     <1=> 32.768kHz external clock from
                        ERU0.IOUT0
   69 00000000         ;                     <2=> 32.768kHz external clock from
                        ACMP0.OUT
   70 00000000         ;                     <3=> 32.768kHz external clock from
                        ACMP1.OUT
   71 00000000         ;                     <4=> 32.768kHz external clock from
                        ACMP2.OUT
   72 00000000         ;                     <5=> Reserved
   73 00000000         ;                     <6=> Reserved
   74 00000000         ;                     <7=> Reserved
   75 00000000         ;     <o0.31>      do not move CLK_VAL1 to SCU_CLKCR[0..
                       19]
   76 00000000         ;   </h>
   77 00000000 00000100 
                       CLK_VAL1_Val
                               EQU              0x00000100  ; 0xF0000000
   78 00000000         
   79 00000000         ;   <h> CLK_VAL2 Configuration
   80 00000000         ;     <o0.0>    disable VADC and SHS Gating
   81 00000000         ;     <o0.1>    disable CCU80 Gating
   82 00000000         ;     <o0.2>    disable CCU40 Gating
   83 00000000         ;     <o0.3>    disable USIC0 Gating
   84 00000000         ;     <o0.4>    disable BCCU0 Gating
   85 00000000         ;     <o0.5>    disable LEDTS0 Gating
   86 00000000         ;     <o0.6>    disable LEDTS1 Gating
   87 00000000         ;     <o0.7>    disable POSIF0 Gating
   88 00000000         ;     <o0.8>    disable MATH Gating
   89 00000000         ;     <o0.9>    disable WDT Gating
   90 00000000         ;     <o0.10>   disable RTC Gating
   91 00000000         ;     <o0.31>   do not move CLK_VAL2 to SCU_CGATCLR0[0..
                       10]



ARM Macro Assembler    Page 3 


   92 00000000         ;   </h>
   93 00000000 00000000 
                       CLK_VAL2_Val
                               EQU              0x00000000  ; 0xF0000000
   94 00000000         ; </h>
   95 00000000         
   96 00000000                 PRESERVE8
   97 00000000                 THUMB
   98 00000000         
   99 00000000         ;* ================== START OF VECTOR TABLE DEFINITION =
                       ===================== */
  100 00000000         ;* Vector Table Mapped to Address 0 at Reset
  101 00000000                 AREA             RESET, DATA, READONLY
  102 00000000                 EXPORT           __Vectors
  103 00000000                 EXPORT           __Vectors_End
  104 00000000                 EXPORT           __Vectors_Size
  105 00000000         
  106 00000000         
  107 00000000         
  108 00000000         __Vectors
  109 00000000 00000000        DCD              __initial_sp ;* Top of Stack
  110 00000004 00000000        DCD              Reset_Handler ;* Reset Handler
  111 00000008 00000000        DCD              0           ;* Not used
  112 0000000C 00000000        DCD              0           ;* Not Used
  113 00000010 00000100        DCD              CLK_VAL1_Val ;* CLK_VAL1
  114 00000014 00000000        DCD              CLK_VAL2_Val ;* CLK_VAL2
  115 00000018         __Vectors_End
  116 00000018         
  117 00000018 00000018 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  118 00000018         
  119 00000018         ;* ================== END OF VECTOR TABLE DEFINITION ===
                       ===================== */
  120 00000018         
  121 00000018         
  122 00000018         ;* ================== START OF VECTOR ROUTINES =========
                       ===================== */
  123 00000018                 AREA             |.text|, CODE, READONLY
  124 00000000         
  125 00000000         ;* Reset Handler
  126 00000000         Reset_Handler
                               PROC
  127 00000000                 EXPORT           Reset_Handler             [WEAK
]
  128 00000000                 IMPORT           __main
  129 00000000                 IMPORT           SystemInit
  130 00000000         
  131 00000000         ;* C routines are likely to be called. Setup the stack n
                       ow
  132 00000000 480F            LDR              R0, =__initial_sp
  133 00000002 4685            MOV              SP, R0
  134 00000004         
  135 00000004         ; Following code initializes the Veneers at address 0x20
                       000000 with a "branch to itself"
  136 00000004         ; The real veneers will be copied later from the scatter
                        loader before reaching main.
  137 00000004         ; This init code should handle an exception before the r
                       eal veneers are copied.



ARM Macro Assembler    Page 4 


  138 00000004 20000000 
                       SRAM_BASE
                               EQU              0x20000000
  139 00000004 E7FEBF00 
                       VENEER_INIT_CODE
                               EQU              0xE7FEBF00  ; NOP, B .
  140 00000004         
  141 00000004 490F            LDR              R1, =SRAM_BASE
  142 00000006 4A10            LDR              R2, =VENEER_INIT_CODE
  143 00000008 2030            MOVS             R0, #48     ; Veneer 0..47
  144 0000000A         Init_Veneers
  145 0000000A 600A            STR              R2, [R1]
  146 0000000C 3104            ADDS             R1, #4
  147 0000000E 1E40            SUBS             R0, R0, #1
  148 00000010 D1FB            BNE              Init_Veneers
  149 00000012         
  150 00000012         
  151 00000012 480E            LDR              R0, =SystemInit
  152 00000014 4780            BLX              R0
  153 00000016         
  154 00000016         
  155 00000016         ; SystemInit_DAVE3() is provided by DAVE3 code generatio
                       n engine. It is
  156 00000016         ; weakly defined here though for a potential override.
  157 00000016         
  158 00000016 480E            LDR              R0, = SystemInit_DAVE3
  159 00000018 4780            BLX              R0
  160 0000001A         
  161 0000001A         
  162 0000001A 480E            LDR              R0, =__main
  163 0000001C 4700            BX               R0
  164 0000001E         
  165 0000001E         
  166 0000001E 00 00           ALIGN
  167 00000020                 ENDP
  168 00000020         
  169 00000020         ;* =====================================================
                       ===================== */
  170 00000020         
  171 00000020         
  172 00000020         
  173 00000020         ;* ========== START OF EXCEPTION HANDLER DEFINITION ====
                       ===================== */
  174 00000020         ;* Default exception Handlers - Users may override this 
                       default functionality
  175 00000020         
  176 00000020         NMI_Handler
                               PROC
  177 00000020                 EXPORT           NMI_Handler                   [
WEAK]
  178 00000020 E7FE            B                .
  179 00000022                 ENDP
  181 00000022         HardFault_Handler
                               PROC
  182 00000022                 EXPORT           HardFault_Handler             [
WEAK]
  183 00000022 E7FE            B                .
  184 00000024                 ENDP
  186 00000024         SVC_Handler



ARM Macro Assembler    Page 5 


                               PROC
  187 00000024                 EXPORT           SVC_Handler                   [
WEAK]
  188 00000024 E7FE            B                .
  189 00000026                 ENDP
  191 00000026         PendSV_Handler
                               PROC
  192 00000026                 EXPORT           PendSV_Handler                [
WEAK]
  193 00000026 E7FE            B                .
  194 00000028                 ENDP
  196 00000028         SysTick_Handler
                               PROC
  197 00000028                 EXPORT           SysTick_Handler               [
WEAK]
  198 00000028 E7FE            B                .
  199 0000002A                 ENDP
  200 0000002A         
  201 0000002A         ;* ============= END OF EXCEPTION HANDLER DEFINITION ===
                       ===================== */
  202 0000002A         
  203 0000002A         
  204 0000002A         ;* ============= START OF INTERRUPT HANDLER DEFINITION =
                       ===================== */
  205 0000002A         ;* IRQ Handlers
  206 0000002A         
  207 0000002A         Default_Handler
                               PROC
  208 0000002A                 EXPORT           SCU_0_IRQHandler            [WE
AK]
  209 0000002A                 EXPORT           SCU_1_IRQHandler            [WE
AK]
  210 0000002A                 EXPORT           SCU_2_IRQHandler            [WE
AK]
  211 0000002A                 EXPORT           ERU0_0_IRQHandler           [WE
AK]
  212 0000002A                 EXPORT           ERU0_1_IRQHandler           [WE
AK]
  213 0000002A                 EXPORT           ERU0_2_IRQHandler           [WE
AK]
  214 0000002A                 EXPORT           ERU0_3_IRQHandler           [WE
AK]
  215 0000002A                 EXPORT           MATH0_0_IRQHandler          [WE
AK]
  216 0000002A                 EXPORT           USIC0_0_IRQHandler          [WE
AK]
  217 0000002A                 EXPORT           USIC0_1_IRQHandler          [WE
AK]
  218 0000002A                 EXPORT           USIC0_2_IRQHandler          [WE
AK]
  219 0000002A                 EXPORT           USIC0_3_IRQHandler          [WE
AK]
  220 0000002A                 EXPORT           USIC0_4_IRQHandler          [WE
AK]
  221 0000002A                 EXPORT           USIC0_5_IRQHandler          [WE
AK]
  222 0000002A                 EXPORT           VADC0_C0_0_IRQHandler       [WE
AK]
  223 0000002A                 EXPORT           VADC0_C0_1_IRQHandler       [WE



ARM Macro Assembler    Page 6 


AK]
  224 0000002A                 EXPORT           VADC0_G0_0_IRQHandler       [WE
AK]
  225 0000002A                 EXPORT           VADC0_G0_1_IRQHandler       [WE
AK]
  226 0000002A                 EXPORT           VADC0_G1_0_IRQHandler       [WE
AK]
  227 0000002A                 EXPORT           VADC0_G1_1_IRQHandler       [WE
AK]
  228 0000002A                 EXPORT           CCU40_0_IRQHandler          [WE
AK]
  229 0000002A                 EXPORT           CCU40_1_IRQHandler          [WE
AK]
  230 0000002A                 EXPORT           CCU40_2_IRQHandler          [WE
AK]
  231 0000002A                 EXPORT           CCU40_3_IRQHandler          [WE
AK]
  232 0000002A                 EXPORT           CCU80_0_IRQHandler          [WE
AK]
  233 0000002A                 EXPORT           CCU80_1_IRQHandler          [WE
AK]
  234 0000002A                 EXPORT           POSIF0_0_IRQHandler         [WE
AK]
  235 0000002A                 EXPORT           POSIF0_1_IRQHandler         [WE
AK]
  236 0000002A                 EXPORT           LEDTS0_0_IRQHandler         [WE
AK]
  237 0000002A                 EXPORT           LEDTS1_0_IRQHandler         [WE
AK]
  238 0000002A                 EXPORT           BCCU0_0_IRQHandler          [WE
AK]
  239 0000002A         
  240 0000002A         SCU_0_IRQHandler
  241 0000002A         SCU_1_IRQHandler
  242 0000002A         SCU_2_IRQHandler
  243 0000002A         ERU0_0_IRQHandler
  244 0000002A         ERU0_1_IRQHandler
  245 0000002A         ERU0_2_IRQHandler
  246 0000002A         ERU0_3_IRQHandler
  247 0000002A         MATH0_0_IRQHandler
  248 0000002A         USIC0_0_IRQHandler
  249 0000002A         USIC0_1_IRQHandler
  250 0000002A         USIC0_2_IRQHandler
  251 0000002A         USIC0_3_IRQHandler
  252 0000002A         USIC0_4_IRQHandler
  253 0000002A         USIC0_5_IRQHandler
  254 0000002A         VADC0_C0_0_IRQHandler
  255 0000002A         VADC0_C0_1_IRQHandler
  256 0000002A         VADC0_G0_0_IRQHandler
  257 0000002A         VADC0_G0_1_IRQHandler
  258 0000002A         VADC0_G1_0_IRQHandler
  259 0000002A         VADC0_G1_1_IRQHandler
  260 0000002A         CCU40_0_IRQHandler
  261 0000002A         CCU40_1_IRQHandler
  262 0000002A         CCU40_2_IRQHandler
  263 0000002A         CCU40_3_IRQHandler
  264 0000002A         CCU80_0_IRQHandler
  265 0000002A         CCU80_1_IRQHandler
  266 0000002A         POSIF0_0_IRQHandler



ARM Macro Assembler    Page 7 


  267 0000002A         POSIF0_1_IRQHandler
  268 0000002A         LEDTS0_0_IRQHandler
  269 0000002A         LEDTS1_0_IRQHandler
  270 0000002A         BCCU0_0_IRQHandler
  271 0000002A         
  272 0000002A E7FE            B                .
  273 0000002C         
  274 0000002C                 ENDP
  275 0000002C         
  276 0000002C                 ALIGN
  277 0000002C         
  278 0000002C         ;* ============= END OF INTERRUPT HANDLER DEFINITION ===
                       ===================== */
  279 0000002C         
  280 0000002C         ;*  Definition of the default weak SystemInit_DAVE3 func
                       tion.
  281 0000002C         ;*  This function will be called by the CMSIS SystemInit
                        function.
  282 0000002C         ;*  If DAVE3 requires an extended SystemInit it will cre
                       ate its own SystemInit_DAVE3
  283 0000002C         ;*  which will overule this weak definition
  284 0000002C         SystemInit_DAVE3
                               PROC
  285 0000002C                 EXPORT           SystemInit_DAVE3             [W
EAK]
  286 0000002C BF00            NOP
  287 0000002E 4770            BX               LR
  288 00000030                 ENDP
  289 00000030         
  290 00000030         ;*  Definition of the default weak DAVE3 function for cl
                       ock App usage.
  291 00000030         ;*  AllowClkInitByStartup Handler */
  292 00000030         AllowClkInitByStartup
                               PROC
  293 00000030                 EXPORT           AllowClkInitByStartup        [W
EAK]
  294 00000030 2001            MOVS             R0,#1
  295 00000032 4770            BX               LR
  296 00000034                 ENDP
  297 00000034         
  298 00000034         
  299 00000034         ;*******************************************************
                       ************************
  300 00000034         ; User Stack and Heap initialization
  301 00000034         ;*******************************************************
                       ************************
  302 00000034                 IF               :DEF:__MICROLIB
  309 00000034         
  310 00000034                 IMPORT           __use_two_region_memory
  311 00000034                 EXPORT           __user_initial_stackheap
  312 00000034         
  313 00000034         __user_initial_stackheap
  314 00000034         
  315 00000034 4808            LDR              R0, =  Heap_Mem
  316 00000036 4909            LDR              R1, =(Stack_Mem + Stack_Size)
  317 00000038 4A07            LDR              R2, = (Heap_Mem +  Heap_Size)
  318 0000003A 4B09            LDR              R3, = Stack_Mem
  319 0000003C 4770            BX               LR
  320 0000003E         



ARM Macro Assembler    Page 8 


  321 0000003E 00 00           ALIGN
  322 00000040         
  323 00000040                 ENDIF
  324 00000040         
  325 00000040         
  326 00000040         ;* ================== START OF INTERRUPT HANDLER VENEERS
                        ==================== */
  327 00000040         ; Veneers are located to fix SRAM Address 0x2000'0000
  328 00000040 00000000 
              20000000 
              E7FEBF00 
              00000000 
              00000000 
              00000000 
              00000000 
              00000400 
              00000000         AREA             |.ARM.__at_0x20000000|, CODE, R
EADWRITE
  329 00000000         
  330 00000000         ; Each Veneer has exactly a lengs of 4 Byte
  331 00000000         
  332 00000000                 MACRO
  333 00000000                 STAYHERE         $IrqNumber
  334 00000000                 LDR              R0, =$IrqNumber
  335 00000000                 B                .
  336 00000000                 MEND
  337 00000000         
  338 00000000                 MACRO
  339 00000000                 JUMPTO           $Handler
  340 00000000                 LDR              R0, =$Handler
  341 00000000                 BX               R0
  342 00000000                 MEND
  343 00000000         
  344 00000000                 STAYHERE         0x0         ;* Reserved
  334 00000000 482F            LDR              R0, =0x0
  335 00000002 E7FE            B                .
  345 00000004                 STAYHERE         0x1         ;* Reserved 
  334 00000004 482F            LDR              R0, =0x1
  335 00000006 E7FE            B                .
  346 00000008                 STAYHERE         0x2         ;* Reserved 
  334 00000008 482F            LDR              R0, =0x2
  335 0000000A E7FE            B                .
  347 0000000C                 JUMPTO           HardFault_Handler ;* HardFault 
                                                            Veneer  
  340 0000000C 482F            LDR              R0, =HardFault_Handler
  341 0000000E 4700            BX               R0
  348 00000010                 STAYHERE         0x4         ;* Reserved 
  334 00000010 482F            LDR              R0, =0x4
  335 00000012 E7FE            B                .
  349 00000014                 STAYHERE         0x5         ;* Reserved 
  334 00000014 482F            LDR              R0, =0x5
  335 00000016 E7FE            B                .
  350 00000018                 STAYHERE         0x6         ;* Reserved 
  334 00000018 482F            LDR              R0, =0x6
  335 0000001A E7FE            B                .
  351 0000001C                 STAYHERE         0x7         ;* Reserved 
  334 0000001C 482F            LDR              R0, =0x7
  335 0000001E E7FE            B                .
  352 00000020                 STAYHERE         0x8         ;* Reserved 



ARM Macro Assembler    Page 9 


  334 00000020 482F            LDR              R0, =0x8
  335 00000022 E7FE            B                .
  353 00000024                 STAYHERE         0x9         ;* Reserved 
  334 00000024 482F            LDR              R0, =0x9
  335 00000026 E7FE            B                .
  354 00000028                 STAYHERE         0xA         ;* Reserved
  334 00000028 482F            LDR              R0, =0xA
  335 0000002A E7FE            B                .
  355 0000002C                 JUMPTO           SVC_Handler ;* SVC Veneer      
                                                              
  340 0000002C 482F            LDR              R0, =SVC_Handler
  341 0000002E 4700            BX               R0
  356 00000030                 STAYHERE         0xC         ;* Reserved
  334 00000030 482F            LDR              R0, =0xC
  335 00000032 E7FE            B                .
  357 00000034                 STAYHERE         0xD         ;* Reserved
  334 00000034 482F            LDR              R0, =0xD
  335 00000036 E7FE            B                .
  358 00000038                 JUMPTO           PendSV_Handler ;* PendSV Veneer
                                                                 
  340 00000038 482F            LDR              R0, =PendSV_Handler
  341 0000003A 4700            BX               R0
  359 0000003C                 JUMPTO           SysTick_Handler ;* SysTick Vene
                                                            er    
  340 0000003C 482F            LDR              R0, =SysTick_Handler
  341 0000003E 4700            BX               R0
  360 00000040                 JUMPTO           SCU_0_IRQHandler ;* SCU_0 Venee
                                                            r      
  340 00000040 482F            LDR              R0, =SCU_0_IRQHandler
  341 00000042 4700            BX               R0
  361 00000044                 JUMPTO           SCU_1_IRQHandler ;* SCU_1 Venee
                                                            r      
  340 00000044 482F            LDR              R0, =SCU_1_IRQHandler
  341 00000046 4700            BX               R0
  362 00000048                 JUMPTO           SCU_2_IRQHandler ;* SCU_2 Venee
                                                            r      
  340 00000048 482F            LDR              R0, =SCU_2_IRQHandler
  341 0000004A 4700            BX               R0
  363 0000004C                 JUMPTO           ERU0_0_IRQHandler ;* SCU_3 Vene
                                                            er      
  340 0000004C 482F            LDR              R0, =ERU0_0_IRQHandler
  341 0000004E 4700            BX               R0
  364 00000050                 JUMPTO           ERU0_1_IRQHandler ;* SCU_4 Vene
                                                            er      
  340 00000050 482F            LDR              R0, =ERU0_1_IRQHandler
  341 00000052 4700            BX               R0
  365 00000054                 JUMPTO           ERU0_2_IRQHandler ;* SCU_5 Vene
                                                            er      
  340 00000054 482F            LDR              R0, =ERU0_2_IRQHandler
  341 00000056 4700            BX               R0
  366 00000058                 JUMPTO           ERU0_3_IRQHandler ;* SCU_6 Vene
                                                            er      
  340 00000058 482F            LDR              R0, =ERU0_3_IRQHandler
  341 0000005A 4700            BX               R0
  367 0000005C                 JUMPTO           MATH0_0_IRQHandler ;* SCU_7 Ven
                                                            eer      
  340 0000005C 482F            LDR              R0, =MATH0_0_IRQHandler
  341 0000005E 4700            BX               R0
  368 00000060                 STAYHERE         0x18        ;* Reserved



ARM Macro Assembler    Page 10 


  334 00000060 482F            LDR              R0, =0x18
  335 00000062 E7FE            B                .
  369 00000064                 JUMPTO           USIC0_0_IRQHandler ;* USIC0_0 V
                                                            eneer    
  340 00000064 482F            LDR              R0, =USIC0_0_IRQHandler
  341 00000066 4700            BX               R0
  370 00000068                 JUMPTO           USIC0_1_IRQHandler ;* USIC0_1 V
                                                            eneer    
  340 00000068 482F            LDR              R0, =USIC0_1_IRQHandler
  341 0000006A 4700            BX               R0
  371 0000006C                 JUMPTO           USIC0_2_IRQHandler ;* USIC0_2 V
                                                            eneer    
  340 0000006C 482F            LDR              R0, =USIC0_2_IRQHandler
  341 0000006E 4700            BX               R0
  372 00000070                 JUMPTO           USIC0_3_IRQHandler ;* USIC0_3 V
                                                            eneer    
  340 00000070 482F            LDR              R0, =USIC0_3_IRQHandler
  341 00000072 4700            BX               R0
  373 00000074                 JUMPTO           USIC0_4_IRQHandler ;* USIC0_4 V
                                                            eneer    
  340 00000074 482F            LDR              R0, =USIC0_4_IRQHandler
  341 00000076 4700            BX               R0
  374 00000078                 JUMPTO           LEDTS0_0_IRQHandler ;* USIC0_5 
                                                            Veneer    
  340 00000078 482F            LDR              R0, =LEDTS0_0_IRQHandler
  341 0000007A 4700            BX               R0
  375 0000007C                 JUMPTO           VADC0_C0_0_IRQHandler ;* VADC0_
                                                            C0_0 Veneer 
  340 0000007C 482F            LDR              R0, =VADC0_C0_0_IRQHandler
  341 0000007E 4700            BX               R0
  376 00000080                 JUMPTO           VADC0_C0_1_IRQHandler ;* VADC0_
                                                            C0_1 Veneer 
  340 00000080 482F            LDR              R0, =VADC0_C0_1_IRQHandler
  341 00000082 4700            BX               R0
  377 00000084                 JUMPTO           VADC0_G0_0_IRQHandler ;* VADC0_
                                                            G0_0 Veneer 
  340 00000084 482F            LDR              R0, =VADC0_G0_0_IRQHandler
  341 00000086 4700            BX               R0
  378 00000088                 JUMPTO           VADC0_G0_1_IRQHandler ;* VADC0_
                                                            G0_1 Veneer 
  340 00000088 482F            LDR              R0, =VADC0_G0_1_IRQHandler
  341 0000008A 4700            BX               R0
  379 0000008C                 JUMPTO           VADC0_G1_0_IRQHandler ;* VADC0_
                                                            G1_0 Veneer 
  340 0000008C 482F            LDR              R0, =VADC0_G1_0_IRQHandler
  341 0000008E 4700            BX               R0
  380 00000090                 JUMPTO           VADC0_G1_1_IRQHandler ;* VADC0_
                                                            G1_1 Veneer 
  340 00000090 482F            LDR              R0, =VADC0_G1_1_IRQHandler
  341 00000092 4700            BX               R0
  381 00000094                 JUMPTO           CCU40_0_IRQHandler ;* CCU40_0 V
                                                            eneer    
  340 00000094 482F            LDR              R0, =CCU40_0_IRQHandler
  341 00000096 4700            BX               R0
  382 00000098                 JUMPTO           CCU40_1_IRQHandler ;* CCU40_1 V
                                                            eneer    
  340 00000098 482F            LDR              R0, =CCU40_1_IRQHandler
  341 0000009A 4700            BX               R0
  383 0000009C                 JUMPTO           CCU40_2_IRQHandler ;* CCU40_2 V



ARM Macro Assembler    Page 11 


                                                            eneer    
  340 0000009C 482F            LDR              R0, =CCU40_2_IRQHandler
  341 0000009E 4700            BX               R0
  384 000000A0                 JUMPTO           CCU40_3_IRQHandler ;* CCU40_3 V
                                                            eneer    
  340 000000A0 482F            LDR              R0, =CCU40_3_IRQHandler
  341 000000A2 4700            BX               R0
  385 000000A4                 JUMPTO           CCU80_0_IRQHandler ;* CCU80_0 V
                                                            eneer    
  340 000000A4 482F            LDR              R0, =CCU80_0_IRQHandler
  341 000000A6 4700            BX               R0
  386 000000A8                 JUMPTO           CCU80_1_IRQHandler ;* CCU80_1 V
                                                            eneer    
  340 000000A8 482F            LDR              R0, =CCU80_1_IRQHandler
  341 000000AA 4700            BX               R0
  387 000000AC                 JUMPTO           POSIF0_0_IRQHandler ;* POSIF0_0
                                                             Veneer   
  340 000000AC 482F            LDR              R0, =POSIF0_0_IRQHandler
  341 000000AE 4700            BX               R0
  388 000000B0                 JUMPTO           POSIF0_1_IRQHandler ;* POSIF0_1
                                                             Veneer   
  340 000000B0 482F            LDR              R0, =POSIF0_1_IRQHandler
  341 000000B2 4700            BX               R0
  389 000000B4                 JUMPTO           LEDTS0_0_IRQHandler ;* LEDTS0_0
                                                             Veneer   
  340 000000B4 4820            LDR              R0, =LEDTS0_0_IRQHandler
  341 000000B6 4700            BX               R0
  390 000000B8                 JUMPTO           LEDTS1_0_IRQHandler ;* LEDTS1_0
                                                             Veneer   
  340 000000B8 482E            LDR              R0, =LEDTS1_0_IRQHandler
  341 000000BA 4700            BX               R0
  391 000000BC                 JUMPTO           BCCU0_0_IRQHandler ;* BCCU0_0 V
                                                            eneer    
  340 000000BC 482E            LDR              R0, =BCCU0_0_IRQHandler
  341 000000BE 4700            BX               R0
  392 000000C0         
  393 000000C0                 ALIGN
  394 000000C0         
  395 000000C0         ;* ================== END OF INTERRUPT HANDLER VENEERS =
                       ===================== */
  396 000000C0         
  397 000000C0                 END
              00000000 
              00000001 
              00000002 
              00000000 
              00000004 
              00000005 
              00000006 
              00000007 
              00000008 
              00000009 
              0000000A 
              00000000 
              0000000C 
              0000000D 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 12 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000018 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\output\startup_xmc1000.d -o.\output\startup_xmc1000.o -IC:\Keil_
v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Infineon\XM
C1300 --predefine="__UVISION_VERSION SETA 520" --list=.\startup_xmc1000.lst Kei
l_Specific\startup_XMC1000.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 36 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 37 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 316 in file Keil_Specific\startup_XMC1000.s
      At line 318 in file Keil_Specific\startup_XMC1000.s

__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 38 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 109 in file Keil_Specific\startup_XMC1000.s
      At line 132 in file Keil_Specific\startup_XMC1000.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 47 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 49 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 315 in file Keil_Specific\startup_XMC1000.s
      At line 317 in file Keil_Specific\startup_XMC1000.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 48 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 50 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 101 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 108 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 102 in file Keil_Specific\startup_XMC1000.s
      At line 117 in file Keil_Specific\startup_XMC1000.s

__Vectors_End 00000018

Symbol: __Vectors_End
   Definitions
      At line 115 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 103 in file Keil_Specific\startup_XMC1000.s
      At line 117 in file Keil_Specific\startup_XMC1000.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 123 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: .text unused
AllowClkInitByStartup 00000030

Symbol: AllowClkInitByStartup
   Definitions
      At line 292 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 293 in file Keil_Specific\startup_XMC1000.s
Comment: AllowClkInitByStartup used once
BCCU0_0_IRQHandler 0000002A

Symbol: BCCU0_0_IRQHandler
   Definitions
      At line 270 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 238 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 391 in file Keil_Specific\startup_XMC1000.s

CCU40_0_IRQHandler 0000002A

Symbol: CCU40_0_IRQHandler
   Definitions
      At line 260 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 228 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 381 in file Keil_Specific\startup_XMC1000.s

CCU40_1_IRQHandler 0000002A

Symbol: CCU40_1_IRQHandler
   Definitions
      At line 261 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 229 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 382 in file Keil_Specific\startup_XMC1000.s

CCU40_2_IRQHandler 0000002A

Symbol: CCU40_2_IRQHandler
   Definitions
      At line 262 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 230 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 383 in file Keil_Specific\startup_XMC1000.s

CCU40_3_IRQHandler 0000002A

Symbol: CCU40_3_IRQHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 263 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 231 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 384 in file Keil_Specific\startup_XMC1000.s

CCU80_0_IRQHandler 0000002A

Symbol: CCU80_0_IRQHandler
   Definitions
      At line 264 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 232 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 385 in file Keil_Specific\startup_XMC1000.s

CCU80_1_IRQHandler 0000002A

Symbol: CCU80_1_IRQHandler
   Definitions
      At line 265 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 233 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 386 in file Keil_Specific\startup_XMC1000.s

Default_Handler 0000002A

Symbol: Default_Handler
   Definitions
      At line 207 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: Default_Handler unused
ERU0_0_IRQHandler 0000002A

Symbol: ERU0_0_IRQHandler
   Definitions
      At line 243 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 211 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 363 in file Keil_Specific\startup_XMC1000.s

ERU0_1_IRQHandler 0000002A

Symbol: ERU0_1_IRQHandler
   Definitions
      At line 244 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 212 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 364 in file Keil_Specific\startup_XMC1000.s

ERU0_2_IRQHandler 0000002A

Symbol: ERU0_2_IRQHandler
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 245 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 213 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 365 in file Keil_Specific\startup_XMC1000.s

ERU0_3_IRQHandler 0000002A

Symbol: ERU0_3_IRQHandler
   Definitions
      At line 246 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 214 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 366 in file Keil_Specific\startup_XMC1000.s

HardFault_Handler 00000022

Symbol: HardFault_Handler
   Definitions
      At line 181 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 182 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 347 in file Keil_Specific\startup_XMC1000.s

Init_Veneers 0000000A

Symbol: Init_Veneers
   Definitions
      At line 144 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 148 in file Keil_Specific\startup_XMC1000.s
Comment: Init_Veneers used once
LEDTS0_0_IRQHandler 0000002A

Symbol: LEDTS0_0_IRQHandler
   Definitions
      At line 268 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 236 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 374 in file Keil_Specific\startup_XMC1000.s

LEDTS1_0_IRQHandler 0000002A

Symbol: LEDTS1_0_IRQHandler
   Definitions
      At line 269 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 237 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 390 in file Keil_Specific\startup_XMC1000.s

MATH0_0_IRQHandler 0000002A

Symbol: MATH0_0_IRQHandler
   Definitions
      At line 247 in file Keil_Specific\startup_XMC1000.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 215 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 367 in file Keil_Specific\startup_XMC1000.s

NMI_Handler 00000020

Symbol: NMI_Handler
   Definitions
      At line 176 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 177 in file Keil_Specific\startup_XMC1000.s
Comment: NMI_Handler used once
POSIF0_0_IRQHandler 0000002A

Symbol: POSIF0_0_IRQHandler
   Definitions
      At line 266 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 234 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 387 in file Keil_Specific\startup_XMC1000.s

POSIF0_1_IRQHandler 0000002A

Symbol: POSIF0_1_IRQHandler
   Definitions
      At line 267 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 235 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 388 in file Keil_Specific\startup_XMC1000.s

PendSV_Handler 00000026

Symbol: PendSV_Handler
   Definitions
      At line 191 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 192 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 358 in file Keil_Specific\startup_XMC1000.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 126 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 110 in file Keil_Specific\startup_XMC1000.s
      At line 127 in file Keil_Specific\startup_XMC1000.s

SCU_0_IRQHandler 0000002A

Symbol: SCU_0_IRQHandler
   Definitions
      At line 240 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 208 in file Keil_Specific\startup_XMC1000.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 340 in macro JUMPTO
      at line 360 in file Keil_Specific\startup_XMC1000.s

SCU_1_IRQHandler 0000002A

Symbol: SCU_1_IRQHandler
   Definitions
      At line 241 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 209 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 361 in file Keil_Specific\startup_XMC1000.s

SCU_2_IRQHandler 0000002A

Symbol: SCU_2_IRQHandler
   Definitions
      At line 242 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 210 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 362 in file Keil_Specific\startup_XMC1000.s

SVC_Handler 00000024

Symbol: SVC_Handler
   Definitions
      At line 186 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 187 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 355 in file Keil_Specific\startup_XMC1000.s

SysTick_Handler 00000028

Symbol: SysTick_Handler
   Definitions
      At line 196 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 197 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 359 in file Keil_Specific\startup_XMC1000.s

SystemInit_DAVE3 0000002C

Symbol: SystemInit_DAVE3
   Definitions
      At line 284 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 158 in file Keil_Specific\startup_XMC1000.s
      At line 285 in file Keil_Specific\startup_XMC1000.s

USIC0_0_IRQHandler 0000002A

Symbol: USIC0_0_IRQHandler
   Definitions
      At line 248 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 216 in file Keil_Specific\startup_XMC1000.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 340 in macro JUMPTO
      at line 369 in file Keil_Specific\startup_XMC1000.s

USIC0_1_IRQHandler 0000002A

Symbol: USIC0_1_IRQHandler
   Definitions
      At line 249 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 217 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 370 in file Keil_Specific\startup_XMC1000.s

USIC0_2_IRQHandler 0000002A

Symbol: USIC0_2_IRQHandler
   Definitions
      At line 250 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 218 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 371 in file Keil_Specific\startup_XMC1000.s

USIC0_3_IRQHandler 0000002A

Symbol: USIC0_3_IRQHandler
   Definitions
      At line 251 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 219 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 372 in file Keil_Specific\startup_XMC1000.s

USIC0_4_IRQHandler 0000002A

Symbol: USIC0_4_IRQHandler
   Definitions
      At line 252 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 220 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 373 in file Keil_Specific\startup_XMC1000.s

USIC0_5_IRQHandler 0000002A

Symbol: USIC0_5_IRQHandler
   Definitions
      At line 253 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 221 in file Keil_Specific\startup_XMC1000.s
Comment: USIC0_5_IRQHandler used once
VADC0_C0_0_IRQHandler 0000002A

Symbol: VADC0_C0_0_IRQHandler
   Definitions
      At line 254 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 222 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      at line 375 in file Keil_Specific\startup_XMC1000.s

VADC0_C0_1_IRQHandler 0000002A

Symbol: VADC0_C0_1_IRQHandler
   Definitions
      At line 255 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 223 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 376 in file Keil_Specific\startup_XMC1000.s

VADC0_G0_0_IRQHandler 0000002A

Symbol: VADC0_G0_0_IRQHandler
   Definitions
      At line 256 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 224 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 377 in file Keil_Specific\startup_XMC1000.s

VADC0_G0_1_IRQHandler 0000002A

Symbol: VADC0_G0_1_IRQHandler
   Definitions
      At line 257 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 225 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 378 in file Keil_Specific\startup_XMC1000.s

VADC0_G1_0_IRQHandler 0000002A

Symbol: VADC0_G1_0_IRQHandler
   Definitions
      At line 258 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 226 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 379 in file Keil_Specific\startup_XMC1000.s

VADC0_G1_1_IRQHandler 0000002A

Symbol: VADC0_G1_1_IRQHandler
   Definitions
      At line 259 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 227 in file Keil_Specific\startup_XMC1000.s
      At line 340 in macro JUMPTO
      at line 380 in file Keil_Specific\startup_XMC1000.s

__user_initial_stackheap 00000034

Symbol: __user_initial_stackheap
   Definitions
      At line 313 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 311 in file Keil_Specific\startup_XMC1000.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

Comment: __user_initial_stackheap used once
43 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x20000000 00000000

Symbol: .ARM.__at_0x20000000
   Definitions
      At line 328 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: .ARM.__at_0x20000000 unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CLK_VAL1_Val 00000100

Symbol: CLK_VAL1_Val
   Definitions
      At line 77 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 113 in file Keil_Specific\startup_XMC1000.s
Comment: CLK_VAL1_Val used once
CLK_VAL2_Val 00000000

Symbol: CLK_VAL2_Val
   Definitions
      At line 93 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 114 in file Keil_Specific\startup_XMC1000.s
Comment: CLK_VAL2_Val used once
Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 45 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 49 in file Keil_Specific\startup_XMC1000.s
      At line 317 in file Keil_Specific\startup_XMC1000.s

SRAM_BASE 20000000

Symbol: SRAM_BASE
   Definitions
      At line 138 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 141 in file Keil_Specific\startup_XMC1000.s
Comment: SRAM_BASE used once
Stack_Size 00000400

Symbol: Stack_Size
   Definitions
      At line 34 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 37 in file Keil_Specific\startup_XMC1000.s
      At line 316 in file Keil_Specific\startup_XMC1000.s

VENEER_INIT_CODE E7FEBF00

Symbol: VENEER_INIT_CODE
   Definitions
      At line 139 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 142 in file Keil_Specific\startup_XMC1000.s
Comment: VENEER_INIT_CODE used once
__Vectors_Size 00000018

Symbol: __Vectors_Size
   Definitions
      At line 117 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 104 in file Keil_Specific\startup_XMC1000.s
Comment: __Vectors_Size used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 129 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 151 in file Keil_Specific\startup_XMC1000.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 128 in file Keil_Specific\startup_XMC1000.s
   Uses
      At line 162 in file Keil_Specific\startup_XMC1000.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 310 in file Keil_Specific\startup_XMC1000.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
401 symbols in table
